<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>AI EXP - Kai Sun</title><link>/</link><description></description><lastBuildDate>Sun, 23 Jul 2017 00:00:00 +0200</lastBuildDate><item><title>Rudolf Dupszki versus Yixin</title><link>/ai-vs-human-gomoku-2.html</link><description>&lt;p&gt;This article is a summary of the 2-game match between Yixin and Rudolf Dupszki in Gomoku World Championship 2017. The final result of Yixin is 2 win.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Sun, 23 Jul 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-07-23:/ai-vs-human-gomoku-2.html</guid><category>AI</category><category>yixin</category><category>gomoku</category></item><item><title>Lin Shu-Hsuan versus Yixin</title><link>/ai-vs-human-renju-2.html</link><description>&lt;p&gt;This article is a summary of the 4-game match between Yixin and Lin Shu-Hsuan. The final result of Yixin is 3 win and 1 loss.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Sun, 16 Jul 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-07-16:/ai-vs-human-renju-2.html</guid><category>AI</category><category>yixin</category><category>renju</category></item><item><title>Yixin in the Final of the Russian Championship 2017</title><link>/ai-vs-human-gomoku.html</link><description>&lt;p&gt;This article is a summary of 3 games between Yixin and Nikonov Konstantin, and 1 game between Yixin and Makarov Pavel. The final result of Yixin is 4 win.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Wed, 14 Jun 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2017-06-14:/ai-vs-human-gomoku.html</guid><category>AI</category><category>yixin</category><category>gomoku</category></item><item><title>Epifanov Dmitry versus Yixin</title><link>/ai-vs-human-renju.html</link><description>&lt;p&gt;This article is a summary of the 8-game match between Yixin and Epifanov Dmitry. The final result of Yixin is 2 win, 2 draw, and 4 loss.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Thu, 19 May 2016 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2016-05-19:/ai-vs-human-renju.html</guid><category>AI</category><category>yixin</category><category>renju</category></item><item><title>Towards Deep Yixin</title><link>/towards-deep-yixin.html</link><description>&lt;p&gt;Recently, I have been struggling with varieties of multi-threading bugs, trying to enable Yixin to take advantage of multi-core processors. Although there is still some space to improve the speedup, the result is good to some extent, because what I would like now is just making Deep Yixin run without …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Sun, 07 Sep 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2014-09-07:/towards-deep-yixin.html</guid><category>yixin</category><category>multi-thread</category></item><item><title>Implementing Elegant Quines in C with Preprocessing</title><link>/implementing-elegant-quines-in-c-with-preprocessing.html</link><description>&lt;p&gt;A quine is a computer program which takes no input and produces a copy of its own source code as its only output. This article introduces an approach to implement elegant quine in C with preprocessing.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Fri, 01 Aug 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2014-08-01:/implementing-elegant-quines-in-c-with-preprocessing.html</guid><category>Quine</category><category>C/C++</category><category>Preprocessing</category></item><item><title>Calculating All Feasible Solutions of Integer Linear Programming with PuLP and SCIP</title><link>/calculating-all-feasible-solutions-of-ilp.html</link><description>&lt;p&gt;In this article, PuLP and SCIP are combined together to solve a general problem: given an integer linear programming problem, calculate all feasible solutions efficiently if the number of feasible solutions is not infinite.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Tue, 29 Jul 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2014-07-29:/calculating-all-feasible-solutions-of-ilp.html</guid><category>SCIP</category><category>PuLP</category><category>ILP</category><category>LP</category></item><item><title>Gomoku/Renju Resouces -- An Overview</title><link>/gomoku-renju-resources-an-overview.html</link><description>&lt;p&gt;(Last update: 2017-6-23)&lt;/p&gt;
&lt;p&gt;I often recieve emails that ask for gomoku/renju resources, especially for AI design, so I write this article to summarize good resources I know. This page will be maintained and updated in the future. If you find any mistake in this page such as broken links …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Mon, 07 Jul 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2014-07-07:/gomoku-renju-resources-an-overview.html</guid><category>gomoku</category><category>renju</category><category>resource</category></item><item><title>Moving my blog from GAE to Github Pages</title><link>/moving-my-blog-to-github.html</link><description>&lt;p&gt;Due to the resource limitation of GAE for free users as well as maintainance of the blog system Micolog being stopped for a long time, I decide to move my blog from GAE to Github Pages.&lt;/p&gt;
&lt;p&gt;Since Github only accepts static site with HTML, images CSS, JS, etc., a static …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Tue, 01 Jul 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2014-07-01:/moving-my-blog-to-github.html</guid><category>pelican</category></item><item><title>Paper translation: "All about Eve: Execute-Verify Replication for Multi-Core Servers"</title><link>/paper-translation-all-about-eve.html</link><description>&lt;p&gt;Translating a paper is one of the homework of our computer system class. I was given the paper "All about Eve: Execute-Verify Replication for Multi-Core Servers", which takes several days for me to translate. Now I make it public and wish it can help some people's study.&lt;/p&gt;
&lt;p&gt;&lt;a href="/files/translation_all_about_eve.pdf"&gt;Download&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Tue, 10 Dec 2013 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:None,2013-12-10:/paper-translation-all-about-eve.html</guid><category>translation</category><category>system</category></item><item><title>Improvement of Yixin</title><link>/improvement-of-yixin.html</link><description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I spent some time trying optimizing Yixin's search and evaluation. The result is good.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I received two bug reports and both of them are about Yixin's rule and they all influence Yixin's strength. These bugs have been fixed now.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;update(2013.9.29):&lt;/p&gt;
&lt;p&gt;The test result of Yixin 0.2 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Sat, 14 Sep 2013 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2013-09-14:/improvement-of-yixin.html</guid><category>yixin</category></item><item><title>A simple "Rock Scissors Paper" AI</title><link>/a-simple-rock-scissors-paper-ai.html</link><description>&lt;p&gt;The idea comes from the following page:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.nytimes.com/interactive/science/rock-paper-scissors.html"&gt;http://www.nytimes.com/interactive/science/rock-paper-scissors.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just for fun.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define MAXSEQ 4&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rec&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MAXSEQ&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;que&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAXSEQ&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;LOSE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;DRAW&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;WIN …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Thu, 17 Nov 2011 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:None,2011-11-17:/a-simple-rock-scissors-paper-ai.html</guid><category>AI</category><category>rock scissors paper</category><category>game</category></item><item><title>Bug &amp; Bug</title><link>/bug-and-bug.html</link><description>&lt;p&gt;Although my old AI supports standard game, I know there exists some bugs while using that rule.And at the same time I got the new gmotor, I tested gmotor2011 yesterday and found that it performed better than Yixin with standard rule, so I tried to fix these bugs. The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Kai Sun</dc:creator><pubDate>Wed, 30 Mar 2011 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:None,2011-03-30:/bug-and-bug.html</guid><category>bug</category><category>piskvork</category><category>gmotor</category><category>yixin</category></item></channel></rss>